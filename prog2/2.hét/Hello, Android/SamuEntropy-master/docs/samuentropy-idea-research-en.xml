<part xmlns="http://docbook.org/ns/docbook" version="5.1" xml:lang="en"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="samuentropy-idea-research-en">
    <title>Research Plan</title>
    <partintro>
        <para>In this part we will create the research plan of the  <emphasis>Samu Entropy</emphasis>.
        </para>
        <para>
           It is quite obvious that there is a close relation between esport and artificial intelligence. This relation is further enhanced by our research which tries to focus not only on using the artificial intelligence but on creating it in a new way. Our idea is to develop a new developmental robotics and robopsychology based game called Samu Entropy as a social robot that will be implemented in software on the family’s home desktop and mobile devices. See also: <link xlink:href="https://github.com/nbatfai/SamuEntropy">https://github.com/nbatfai/SamuEntropy</link>.
        </para>
        <para>The task of this part is to choose the development of the esport game, and then support of the <indexterm>
                <primary>SRS</primary>
            </indexterm>SRS documentation.
        </para>
            
    </partintro>
    <chapter>
        <info>
            <title>Introduction</title>
            <keywordset>
                <keyword></keyword>
            </keywordset>
        </info>
        <section>
            <title>Introduction</title>
            <para>
                Many times it seemed that the creation of artifical inteligence is close, but it was not succesfull.
		Our expectations are fatted up by the results of Google DeepMind.
		Samu is also a part of this inspiration and aspiration in this direction, but it might be useless.
		Now, we do not concentrate to Samu, we see things from a different perspective: our dream is an e-sport where the 			goal is to create artificially intelligent species, where the species mean something intuitive.
            </para>
        </section>
        <section>
            <title>Samu Entropy</title>
            <para>
                At this point, we have to dream the game! To gain some experience, we create fast and throwable prototypes.
            </para>
            <para>
                Where does the game take place? On Earth. When? Today.
            </para>
            <section>
                <title>The Family</title>
                <para>
                    The basic fundation of this game is the family. The family means a group which can take care of a Samu agent. The Family (inside the game) can be a real family, a group of friends, a community of a university course, but also a single human player.
                </para>
                <para>
                   From architectural viewpoint, the family is the brain of the agent (for example, it is a program which run on PC or Notebook) which has sensors and moving parts.
                </para>
                <para>   
		In functional meaning, the brain does calculations and manages the mobile sensors and moving parts.
		The camera of the human player is the eye and the GPS is an other sensory organ.
		The player takes the phone and Samu can walk with the player with it.
		Consider the followings: if the brain is curious about something the player goes there (with the assistance of GPS), makes a photo (see the Matyi, the Hunter use case).
                </para>
                <note>
                    <title>Family is the architectural frame</title> 
                    <para>
                        Our definition of family that will be developed in game means the previously outlined architecture.
                    </para>
                </note>                
            </section>            
            <section xml:id="usecases">
                <title>Main use cases</title>
                <para>
                    The next use cases are not specify an actual game, 
		    only give directions (will be developed in game), the chapter
		    <link xlink:href="#rapidprotos">Rapid prototyping</link> introduce specific games.
		    These use cases define the archetypes of the applications to be developed.

                </para>
                <section>
                    <title>Samu, the brain</title>
                    <para>
                        This will include programs that implement machine learning algorithms.
                    </para>
                </section>
                <section>
                    <title>Gréta, the builder</title>
                    <para>
                        This will include programs that provide a visual interface to Samu programs.
                        It is important that these programs has an orderliness increasing gaming experince
			<indexterm>
                            <primary>gaming experience</primary>
                        </indexterm>.
			
                    </para>
                </section>
                <section>
                    <title>Nándi, the teacher</title>
                    <para>
                        This will include programs that provide supervised learning.
                    </para>
                </section>
                <section>
                    <title>Matyi, the hunter</title>
                    <para>
                        This will include programs that implement perception and intervention (such as geocaching if applicable).
                        
			<indexterm>
                            <primary>geocaching</primary>
                        </indexterm>
                        
                    </para>
                </section>
                <section>
                    <title>Erika, the fighter</title>
                    <para>
                        This will include programs that intents to provide an esport experience.
                    </para>
                    <tip>
                        <title>How can be <emphasis>Erika, the fighter</emphasis>a good program?</title> 
                        <para>
                            For example, a game can be projected onto a large screen in arenas, like a box match in the main gala. So 
			    we do not think of a typical quiz game here ... 
			    Gaming experince is good, if it is good to watch.
                        </para>
                    </tip>
                </section>
                <section>
                    <title>Norbi, the chief of staff</title>
                    <para>
                        This will include server-side programs that will be manage families and brainbattles.
                    </para>
                </section>                
            </section>
        </section>
        <section>
            <title>Educational and research plans</title>
            <para>                
                In these tasks students and teachers work together. Students can work on these tasks in Facebook group <indexterm>
                    <primary>UDPROG</primary>
                </indexterm> UDPROG 
                (<indexterm>
                    <primary>DevRob2Psy</primary>
                </indexterm>DevRob2Psy, <indexterm>
                    <primary>UDRFT</primary>
                </indexterm> UDRFT), and
		in this sense these tasks can be used in education.
            </para>            
            <para>                
		Basic steps to solve tasks:
                <orderedlist numeration="lowerroman">
                    <listitem>
                        <para>Fork this<link xlink:href="https://github.com/nbatfai/SamuEntropy">https://github.com/nbatfai/SamuEntropy</link> project!</para>
                    </listitem>                
                    <listitem>
                        <para>Make your own solution in your fork!</para>
                    </listitem>                
                    <listitem>
                        <para>Send a pull-request! (The active UDPROG students can earn points by completing these tasks, if your pull request will be merged, you can earn more bonus points :)</para>
                    </listitem>                
                </orderedlist>          
            </para>            
            <section xml:id="rapidprotos">
                <title>Rapid prototyping</title>
                <para>
                    Here are ideas and their implementation. It is important to implement the archetypes outlined in the chapter 
                    <link xlink:href="#usecases">Main use cases</link> (Gréta, Nándi, Matyi, Erika).
                    At this point, brain-storming is important, but it is important to outline ideas that can be implemented as a fast prototype to observe its 
                    <indexterm>
                        <primary>gaming experience</primary>
                    </indexterm>
                    <link xlink:href="#samuentropy-idea-intro-en.jatekelmeny">game experience</link>.
                </para>
                <para>
                   It is worth noting the emerging features in the brainstorming to see if they can be applied to other games.
                </para>       
                <tip>
                    <title>Meta-feature: ONE BRAIN RULE THEM ALL!</title>
                    <para>
                       It can be quite an interesting way to choose not the best prototype for the implementation(SRS docs etc.)

                        but if it works as in the
<link xlink:href="#usecases">Main use cases</link> under the heading 
                        Gréta, Nándi, Matyi, Erika archtype segmented, then with the change of the brain the players could choose in which game to participate.
                    </para>
                </tip>                          
                <section xml:id="album">
                    <title>Samu Family Album<footnote>
                            <para>For work title: FACE BATTLE (FaBa).</para>
                        </footnote>.</title>
                    <para>
                        The essence of this game is face recognition<footnote>
                            <para>
				We use the camera for the face recognition (See also the SamuCam projects) it means that the pictures are connected to a person (it means his/her account) or feelings(happy, sad).
			    </para>
                        </footnote>.
                    </para>
                    <para>
                        Every player who is a member of a family takes a photo of themselves and of their other family members and other non-players, too.
                    </para>
                    <section>
                        <title>Samu</title>
                        <para>
                            The developed agent tasked with face identification (the faces of their own and other families). In this implementation we use the <indexterm>
                                <primary>DeepMind</primary>
                                <secondary>TensorFlow</secondary>
                                <see>Google</see>
                            </indexterm>Google's TensorFlow package. This is a typical PC application.
                        </para>
                    </section>
                    <section>
                        <title>Gréta</title>
                        <para>
                            The function of the Samu implementation developed in TensorFlow. We will be able to provide a graphical user interface for the better gaming experience
				<indexterm>
                                <primary>gaming experience</primary>
                            </indexterm>
 				and monitoring the TensorFlow datastream.
                        </para>
                    </section>
                    <section>
                        <title>Nándi</title>
                        <para>
                            The function of this program is to learn data that belongs to the owner of the picture (for example, whose face is in the photo, and the expressed feelings).
                        </para>
                        <para>
                            If in the &#x201D;Matyi&#x201D; function the player creates a photo during the hunt, then the player &#x201D;Nándi&#x201D; teaches the brain to check if the player's photo is real.
                        </para>
                    </section>
                    <section>
                        <title>Matyi</title>
                        <para>
                            The task of the developed program is to record pictures and related data. For example, the server notifies if there is a player nearby (
                            <indexterm>
                                <primary>OpenStreetMap</primary>
                            </indexterm>OpenStreetMap and or
                            <indexterm>
                                <primary>Google Maps</primary>
                            </indexterm>Google Maps visualization)
                            , or reachable via Bluetooth (or barcode, QR code, bracelet, brooch, NFC sticker etc.), then they change faces and data.                        
                        </para>
                        <tip xml:id="bits">
                            <title>Feature: collecting bits</title>
                            <para>
                               A player is prompted to meet, because they will get bits! Usually, we try the measure ingame cash, matching fund, goodness, etc. in information or bits.
                            </para>
                            <para>                                
                                For example, the hunter notes relative frequencies at the meetings(With X x<subscript>1</subscript> times, 
                                with Y y<subscript>1</subscript> times, etc. till with the meeting of someone unfamiliar). Based on this, at the next meeting, they will get as many bits as much is the entropy of &#x201D;with whom I met&#x201D; (which they will only get if it was predicted etc.).                                
                            </para>
                        </tip>                            
                        <para  xml:id="samucam1">
                            It is important to take pictures only about faces, because of this, we try the face photo maker Android app
                            <indexterm>
                                <primary>Android Mobile Vision API</primary>
                            </indexterm>
                            <link xlink:href="https://github.com/googlesamples/android-vision">Android Mobile Vision API</link>. In the PC app, we can start from the code used in
                            <link xlink:href="https://github.com/nbatfai/SamuCam">SamuCam</link> (there is a web camera or the phone just in an IP webcam function and
                            <indexterm>
                                <primary>OpenCV</primary>
                            </indexterm>
                            we used OpenCV). 
                            <tip>
                                <title>It works with photos</title>
                                <para xml:id="samucam2">
                                    In the mentioned <application>SamuCam</application> program, we could see that the face recognition teaching with photos goes perfectly (not the learning, but the teaching :) for example, see this video: <link xlink:href="https://youtu.be/6cRbyKrq45c">https://youtu.be/6cRbyKrq45c</link>                                
                                </para>
                            </tip>                                                        
                        </para>                        
                    </section>
                    <section>
                        <title>Erika</title>
                        <para>
                            In a battle, two families compare their power (knowledge). Profile picture of, let's say, 5-5 (private players) toss the frequency associated with, and
                             after this short learning period, the other brain has to recognize the family's other photos, if they are listed in the person-in-five, if so, which one, etc.
                             (A quasi-11 duel basis and the results are measured in bits, based on the prediction entropy).
                        </para>
                        <para>
                            The winning family will get the knowledge base of the defeated one, or for a given time, the defeated family shares the later taken information's parts to the other player.
                        </para>
                        <para>
                            The name of the battle is: brain battle<footnote>
                                <para>For giving this name, special thanks to Bendegúz Mátyás Bátfai.</para>
                            </footnote>.
                        </para>
                    </section>
                    <section>
                        <title>Concrete app ideas</title>
                        <para>
                        </para>
                        <section>
                            <title>Norbi</title>
                            <para>
                                The serverside's task is the &#x201D;Samu is the brain&#x201D; organisation of families and brain battles on PC.
                            </para>
                            <para>
                                A server represents a tribe, the relationship of tribes and families is 1:N. So one tribe can have several families. 
                                The registration of the family into a tribe can be initiated on the Samu brain client by a player in a given case. 
                            </para>
                            <para>
                                Design a communication protocoll for these cases, use the
                                                                                            <indexterm>
                                <primary>Google</primary>
                                <secondary>Protocol Buffers</secondary>
                            </indexterm>

                                <link xlink:href="https://developers.google.com/protocol-buffers/">Google Protocol Buffers</link>

                            </para>
                            <orderedlist numeration="lowerroman">
                                <listitem>
                                    <para>
                                        Norbi's and Samu's relationship: Norbi ensures rows, depending on Samu's bitnumbers<footnote>
                                            <para>The family's &#x201D;goodness&#x201D; is measured in bits, we will say that my family is 64 kilobyte, 3 Gigabyte and so on. 
                                                </para>
                                        </footnote> for the Gréta, Nándi, Matyi and Erika family members 
                                        for the pictures and their following metadata sharing. 
                                    </para>
                            <para>
                                Create profile, for example.: picture, name, entropy<footnote>
                                    <para>See the   
                                        <link xlink:href="#bits">Feature: collecting bits</link> 
                                        note, which explains, how many points the player has.</para>
                                </footnote>, GPS at registration etc.

                            </para>                                    
                                </listitem>                                
                                <listitem>
                                    <para>
                                        Relationship between Norbi and Gréta : The Gréta client downloads the Samu brain neural architecture, for editing.
                                    </para>
                                </listitem>                            
                                <listitem>
                                    <para>
                                        Relationship between Norbi and Nándi: the Nándi client downloads the pictures and information that were &#x201D;hunted&#x201D; by Matyi.
                                    </para>                                
                                </listitem>

                                <listitem>
                                    <para>
                                        Relationship between Norbi and Matyi: the Matyi client uploads what he &#x201D;hunted&#x201D; the pictures and the information.
                                    </para>                                
                                </listitem>

                                <listitem>
                                    <para>
                                        Relationship between two Samu through Norbi: sharing information between two brain is independent to the result of the battle.
                                    </para>                                
                                </listitem>

                                <listitem>
                                    <para>
                                        Relationship between Norbi and Erika: manage the brain battle!
                                    </para>                                        
                                </listitem>

                                <listitem>
                                    <para>
                                        Relationship between two Norbi: battle of tribes, we are not working on this for now, when the developing in one tribe will be ok, then this will be addressed!
                                    </para>                                        
                                </listitem>
                        
                            </orderedlist>
                        </section>
                        <section>
                            <title>Samu</title>
                            <para>
                                                            <indexterm>
                                <primary>TensorFlow</primary>
                            </indexterm>
                                Create a face recogniser case study, using TensorFlow (the C++ API)<footnote>
                                    <para>See also the
                                        <link xlink:href="https://www.tensorflow.org/versions/r0.10/tutorials/image_recognition/index.html">https://www.tensorflow.org/versions/r0.10/tutorials/image_recognition/index.html</link> 
                                        tutorial.</para>
                                </footnote>
                            </para>
                        </section>
                        <section>
                            <title>Gréta</title>
                            <para>
                            </para>
                        </section>
                        <section>
                            <title>Nándi</title>
                            <para>
                            </para>
                        </section>
                        <section>
                            <title>Matyi</title>
                            <para>
                                Starting from the previously mentioned <link xlink:href="#samucam1">SamuCam</link>, make a PC C++ case study 
which marks out the face from a live picture, see the previously linked SamuCam demo <link xlink:href="#samucam2">video</link>!
                            </para>
                            <para>
                                                            <indexterm>
                                <primary>Android Mobile Vision API</primary>
                            </indexterm>
                                Using the previously mentioned <link xlink:href="#samucam1">Android Mobile Vision API</link>, create an Android case study which marks out the face from a live picture.
                            </para>
                        </section>
                        <section>
                            <title>Erika</title>
                            <para>
                            </para>
                        </section>
                        <section>
                            <title>Gaming experience and visualization experiments</title>
                            <para>
                            </para>
                            <orderedlist numeration="lowerroman">
                                <listitem>
                                    <para>
                                        <indexterm>
                            <primary>Samu</primary>
                            <secondary>Amoba</secondary>
                        </indexterm>
                                        Samu Amoba: asks from the Norbi server about the Samu brain and players from the family and on
                                        <indexterm>
                            <primary>OpenStreetMap</primary>
                        </indexterm>OpenStreetMap draws and amoba, where &#x201E;&#x201D;
                                        is the brain's GPS coordinates, on the middle the foothills the family's players registrational (or hunting) GPS coordinates. 
                                        (you can go out from <indexterm>
                            <primary>Raxicab</primary>
                            <secondary>rcwin</secondary>
                            <see>OOCWC</see>
                        </indexterm>
			Raxicab rcwin viewer according to the OSM drawing, don't care about network communication, the family's GPS coordinates must be in the code, but of course should work as usual, the 
                        <indexterm>
                            <primary>Raxicab</primary>
                        </indexterm>
                                        in UDPROG community 420 points, mustn't appear in the fork of SamuEntropy, just max. own repository, for example from Raxicab forked, introduction on Facebook).
                                    </para>
                                </listitem>
                            </orderedlist>
                        </section>
                    </section>
                </section>

                <section xml:id="oocwc-fight">
                    <title>Samu OOCWC Fight</title>
                    <para>
                        This concrete game's main point is that
                        <indexterm>
                            <primary>OOCWC</primary>
                        </indexterm> OOCWC<footnote>
                            <para>Different editions:  
                                <link xlink:href="https://github.com/nbatfai/robocar-emulator">Police</link> and the
                                <indexterm>
                            <primary>Raxicab</primary>
                        </indexterm>
                                <link xlink:href="https://github.com/nbatfai/SamuSmartCity">Raxicab</link>.</para>
                        </footnote> RTS edition.
                    </para>
                    
                </section>
                                                                
                <section xml:id="devrobvision">
                    <title>Samu DevRob Vision</title>
                    <para>
                        This concrete game's main point is the development of vision should be modeled, starting from an 1x1 pixel eye going to ???x???.
                    </para>
           
                </section>
                
                
                <section xml:id="customrts">
                    <title>Samu Custom RTS</title>
                    <para>
                        This concrete game's main point is that in <indexterm>
                            <primary>0 A. D.</primary>
                        </indexterm> 0 A. D. RTS we leave to the brain to control certain parts of the empire.
                    </para>
                    
                </section>

            </section>                    
           
                                  
            <section>
                <title>Tasks and challanges</title>
                <para>
                
                </para>
                <section>
                    <title>Logos</title>
                    <para>
                        Place the forks into the <filename class="directory">docs/res/logo</filename> library. 
                        PNG is needed, an SVG variant and a license! As an example
                        take a look at <indexterm>
                            <primary>Márton Vona</primary>
                        </indexterm>The logo created by Márton Vona
                        <indexterm>
                            <primary>Robocar Championship  </primary>
                            <see>OOCWC</see>
                        </indexterm>         
                        Robocar Championship                    
                        <indexterm>
                            <primary>OOCWC</primary>
                        </indexterm>
                        <link xlink:href="https://sourceforge.net/p/udprog/code/ci/master/tree/source/robotauto/logo/">OOCWC logo</link>.
                    </para>                
                    <orderedlist numeration="lowerroman">
                        <listitem>
                            <para>Create a new logo for the Samu Entropy. (240 point in UDPROG society)</para>
                        </listitem>                
             
                    </orderedlist>          
                </section> 
            </section>
        </section>        
        <section>
            <title>Acknowledgment</title>
            <para>
                Thanks for my children Bátfai Mátyás Bendegúz, Bátfai Nándor Benjámin and Bátfai Margaréta Niobé for the great brain battles which created Samu Entropy.
            </para>
        </section> 
	<section>
            <title>Translators</title>
            <para>
                Gergő Bogacsovics, János Pogány, Attila Fodor.
            </para>
        </section>         
    </chapter>
</part>    
